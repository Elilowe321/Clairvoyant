services:
  # Test container to make sure I can access database
  # docker-compose build testing   
  # docker-compose run --rm testing
  testing:
    build: ./backend
    command: sh -c "python testing.py"
    env_file:
      - .env
    networks:
      - my_network
    depends_on:
      - db

  # PostgreSQL database service
  # To get updated data back on local machine: docker exec -t <container ID> pg_dump -U <username> -d <database name> > backups/backup.sql
  # Put backup data back onto the docker container: Get-Content ./backups/backup.sql | docker exec -i <container ID> psql -U <username> -d <database name>
  db:
    image: postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Updated database in docker container
      - ./backups:/backups  # Mount local folder for backups
    networks:
      - my_network

  # Creates an online SQL editor (127.0.0.1:5050)
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - my_network

networks:
  my_network:
    driver: bridge

volumes:
  postgres_data:
